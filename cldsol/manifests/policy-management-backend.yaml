apiVersion: apps/v1
kind: Deployment
metadata:
  name: policy-management-backend
  labels:
    app: policy-management-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: policy-management-backend
  template:
    metadata:
      labels:
        app: policy-management-backend
    spec:
      containers:
        - env:
            - name: CUSTOMERCORE_BASEURL
              value: http://customer-core.cldsol.mirioeggmann.ch
            - name: SPRING_BOOT_ADMIN_CLIENT_URL
              value: http://spring-boot-admin.cldsol.mirioeggmann.ch
          image: mirioeggmann/lakesidemutual-policy-management-backend
          imagePullPolicy: Always
          name: policy-management-backend
          ports:
            - containerPort: 8090
            - containerPort: 61613
            - containerPort: 61616
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: policy-management-backend
spec:
  selector:
    app: policy-management-backend
  ports:
    - name: "8090"
      port: 8090
      targetPort: 8090
  type: ClusterIP
---
# Not sure why, but we need two distinct LoadBalancers for this to work:
apiVersion: v1
kind: Service
metadata:
  name: policy-management-backend-queue
spec:
  selector:
    app: policy-management-backend
  ports:
    - name: "61613"
      port: 61613
      targetPort: 61613
    - name: "61616"
      port: 61616
      targetPort: 61616
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: policy-management-backend
spec:
  ingressClassName: webapprouting.kubernetes.azure.com
  rules:
    - host: "policy-management-backend.cldsol.mirioeggmann.ch"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: policy-management-backend
                port:
                  number: 8090
